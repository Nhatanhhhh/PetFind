@model PetStore.Models.DTOs.AdminStatisticsDTO
@{
    ViewData["Title"] = "Thống kê hệ thống";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-gradient-primary text-white">
                <div class="card-body">
                    <h2 class="mb-0">
                        <i class="fas fa-chart-bar me-2"></i>
                        Thống kê hệ thống
                    </h2>
                    <p class="mb-0">Tổng quan về hoạt động của hệ thống PetStore</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.TotalUsers</h4>
                            <p class="mb-0">Tổng người dùng</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-users fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.ActiveUsers</h4>
                            <p class="mb-0">Người dùng hoạt động</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-user-check fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.TotalReports</h4>
                            <p class="mb-0">Tổng báo cáo</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-file-alt fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.PendingReports</h4>
                            <p class="mb-0">Chờ kiểm duyệt</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clock fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row g-4 mb-4">
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-pie me-2"></i>
                        Báo cáo theo trạng thái
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="statusChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-bar me-2"></i>
                        Báo cáo theo loại
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="typeChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Statistics -->
    <div class="row g-4">
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-map-marker-alt me-2"></i>
                        Báo cáo theo thành phố
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.ReportsByCity.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Thành phố</th>
                                        <th>Số lượng</th>
                                        <th>Tỷ lệ</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var city in Model.ReportsByCity.OrderByDescending(x => x.Value))
                                    {
                                        var percentage = Model.TotalReports > 0 ? (city.Value * 100.0 / Model.TotalReports) : 0;
                                        <tr>
                                            <td>@city.Key</td>
                                            <td>@city.Value</td>
                                            <td>
                                                <div class="progress" style="height: 20px;">
                                                    <div class="progress-bar" style="width: @percentage%">
                                                        @percentage.ToString("F1")%
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-map fa-2x text-muted mb-3"></i>
                            <p class="text-muted">Chưa có dữ liệu báo cáo theo thành phố</p>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-calendar-alt me-2"></i>
                        Báo cáo theo tháng
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.ReportsByMonth.Any())
                    {
                        <canvas id="monthlyChart" width="400" height="200"></canvas>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-calendar fa-2x text-muted mb-3"></i>
                            <p class="text-muted">Chưa có dữ liệu báo cáo theo tháng</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.bg-gradient-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.card {
    border: none;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    border-radius: 0.5rem;
}

.card-header {
    border-radius: 0.5rem 0.5rem 0 0 !important;
    border-bottom: 1px solid #dee2e6;
}

.progress {
    background-color: #e9ecef;
    border-radius: 0.25rem;
}

.progress-bar {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    font-size: 12px;
    line-height: 20px;
}

.table th {
    border-top: none;
    font-weight: 600;
    color: #495057;
}
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Status Chart
        const statusCtx = document.getElementById('statusChart').getContext('2d');
        const statusChart = new Chart(statusCtx, {
            type: 'doughnut',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.ReportsByStatus.Select(x => $"'{x.Key}'")))],
                datasets: [{
                    data: [@string.Join(",", Model.ReportsByStatus.Select(x => x.Value))],
                    backgroundColor: [
                        '#ffc107',
                        '#28a745',
                        '#6c757d',
                        '#17a2b8'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Type Chart
        const typeCtx = document.getElementById('typeChart').getContext('2d');
        const typeChart = new Chart(typeCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.ReportsByType.Select(x => $"'{x.Key}'")))],
                datasets: [{
                    label: 'Số lượng báo cáo',
                    data: [@string.Join(",", Model.ReportsByType.Select(x => x.Value))],
                    backgroundColor: [
                        '#dc3545',
                        '#28a745'
                    ]
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Monthly Chart
        @if (Model.ReportsByMonth.Any())
        {
            <text>
            const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
            const monthlyChart = new Chart(monthlyCtx, {
                type: 'line',
                data: {
                    labels: [@Html.Raw(string.Join(",", Model.ReportsByMonth.Select(x => $"'{x.Key}'")))],
                    datasets: [{
                        label: 'Báo cáo',
                        data: [@string.Join(",", Model.ReportsByMonth.Select(x => x.Value))],
                        borderColor: '#667eea',
                        backgroundColor: 'rgba(102, 126, 234, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
            </text>
        }
    </script>
} 